{#
/**
 * @file
 * Default theme implementation for displaying an installable library.
 *
 * Variables:
 * - attributes: HTML attributes to be added to the element.
 * - library: The InstallableLibrary definition.
 *
 * @see markdown_preprocess_installable_library()
 *
 * @ingroup themeable
 *
 * @todo Move upstream to https://www.drupal.org/project/installable_plugins.
 */
#}
{% set version = library.getVersionLink ?: (library.versionExtra ?: library.version) %}
{% set latestVersion = library.getLatestVersion %}

{% set lib = library ?: preferredLibrary %}

{# Determine the library status. #}
{% set status = 'Not Installed'|t %}
{% if lib and not lib.requirementViolations %}
  {% if lib.hasRequestFailure %}
    {% set status = 'Request Failure'|t %}
  {% elseif lib.getNewerVersions %}
    {% if lib.deprecated %}
      {% set status = 'Deprecated'|t %}
    {% elseif lib.preferred %}
      {% set status = 'Update Available'|t %}
    {% else %}
      {% set status = 'Upgrade Available'|t %}
    {% endif %}
  {% elseif lib.isKnownVersion %}
    {% if lib.isPrerelease %}
      {% set status = 'Prerelease'|t %}
    {% elseif lib.isDev %}
      {% set status = 'Development Release'|t %}
    {% else %}
      {% set status = 'Up to date'|t %}
    {% endif %}
  {% else %}
    {% set status = 'Unknown'|t %}
  {% endif %}
{% endif %}

{% set classes = [
  'installable-library',
  library.id ? 'installable-library--' ~ library.id|clean_class,
  'installable-library--' ~ status|clean_class,
] %}
<span class="installable-library-wrapper">
  <span{{ attributes.addClass(classes) }}>
    <span class="installed-library-status{{ library.isInstalled ? ' installed-library-status--installed' : '' }}" title="{{ status }}"></span>
    {% if version %}
      <span>
        <strong>
          {% if library.deprecated %}
            [{{ 'Deprecated'|t|upper }}]
          {% endif %}
          {{ library.label ?: library.id }}
        </strong>
      </span>
      <span>
        <em>
          {{ 'Version'|t }}: {{ version }}
          {% if latestVersion and latestVersion != library.version %}
            {% if preferredLibrary and library.id != preferredLibrary.id %}
              , {{ 'Replaced with'|t }}:
              {{ library.getVersionLink(latestVersion, preferredLibrary.label ?: preferredLibrary.id ~ ':' ~ latestVersion) ?: latestVersion }}
            {% else %}
              , {{ 'Latest'|t }}:
              {{ library.getVersionLink(latestVersion) ?: latestVersion }}
            {% endif %}
            {% trans %}
              ({{ count }} release behind)
            {% plural library.getNewerVersions|length %}
              ({{ count }} releases behind)
            {% endtrans %}
          {% endif %}
        </em>
      </span>
      {% if library.requirementViolations %}
        <ul class="installable-library-violations">
          {% for violation in library.requirementViolations %}
            <li>{{ violation }}</li>
          {% endfor %}
        </ul>
    {% endif %}
    {% else %}
      <span>
        <em> {{ 'Not Installed'|t }}</em>
      </span>
      {% if library.getInstallCommand %}
        <span>
          <kbd class="installable-library-command">
            {{ library.getInstallCommand }}
          </kbd>
        </span>
      {% endif %}
    {% endif %}
    {% if libary and preferredLibrary and preferredLibrary.id != library.id %}
      <span>
        <em>
          {{ 'Upgrade to'|t }}: {{ preferredLibrary.getLink ?: (preferredLibrary.label ?: preferredLibrary.id) }}
        </em>
      </span>
    {% endif %}
    {% if library.hasRequestFailure %}
      <span><small><em>*{{ 'Unable to retrieve info, <a href=":url" target="_blank">check logs</a>'|t({':url': path('dblog.overview', [], {query: {type: ['markdown']}})}) }}.</em></small></span>
    {% endif %}
  </span>
</span>
